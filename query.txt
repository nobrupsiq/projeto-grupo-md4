1 - Sets mais antigos

select name, year
from sets
order by year asc limit 10;

2 - Star Wars com mais de 50 peças:

select name, num_parts as quantidade, year
from sets
where name like '%Star War%'
order by quantidade > 50 desc limit 10;

3 - Agrupar os Heróis da Marvel e DC

select name, case when 
name like '%DC%' Then'Herois DC ' 
when 
name like '%Marvel%' then 'Herois Marvel' 
END AS Herois_LEGO 
FROM sets order by Herois_LEGO desc limit 80;

4 - Categorias que possuem menos de 10 peças disponíveis no inventário:

select part_categories.name as "Categorias", sum(quantity) as "Total"
from parts inner join inventory_parts using(part_num) 
inner join part_categories on parts.part_cat_id = part_categories.id 
group by part_cat_id having sum(quantity) < 11 order by total desc;

Explicação
1 - Seleciona duas colunas: "Categorias" (nome da categoria da peça) e "Total" (soma da quantidade de peças)
2 - A partir das tabelas "parts", "inventory_parts" e "part_categories", ele realiza três junções INNER JOINs:
    "parts" e "inventory_parts" usando a coluna "part_num"
    "parts" e "part_categories" usando a coluna "part_cat_id"
3 - Agrupa as informações por "part_cat_id" (categoria da peça)
4 - Utiliza a cláusula HAVING para filtrar apenas as categorias cuja soma da quantidade de peças seja menor que 11
5 - Ordena as informações pela coluna "Total" em ordem decrescente.
- O resultado desta consulta é uma tabela que mostra o nome das categorias e o total de peças para cada categoria, filtradas por aquelas com somente uma quantidade total menor que 11 e ordenadas pela quantidade total em ordem decrescente
